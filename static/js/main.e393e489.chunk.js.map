{"version":3,"sources":["TodoItem.js","TodoList.js","TodoApp.js","TodosFilter.js","App.js","index.js"],"names":["TodoItem","handleChange","_this$props","_this","props","todo","handleChangeItem","id","completed","this","react_default","a","createElement","className","type","concat","onChange","htmlFor","title","React","Component","TodoList","todos","map","key","src_TodoItem","TodoApp","state","Date","valueOf","event","setState","target","value","handleKeyUp","addNewTodo","_this$state","keyCode","placeholder","onKeyUp","filters","path","name","TodosFilter","changeFilter","filter","item","onClick","href","App","handleChangeFilter","newFilterValue","addTodo","Object","toConsumableArray","handleOnchange","newTodos","objectSpread","filteredList","notCompletedCount","length","src_TodoApp","style","display","src_TodoList","src_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e393e489.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoItem extends React.Component {\n  handleChange = () => {\n    const { todo, handleChangeItem } = this.props;\n\n    handleChangeItem(todo.id, !todo.completed);\n  };\n\n  render() {\n    const { todo } = this.props;\n\n    return (\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${todo.id}`}\n          onChange={this.handleChange}\n        />\n        {/* eslint-disable-next-line jsx-a11y/label-has-for */}\n        <label htmlFor={`todo-${todo.id}`}>{todo.title}</label>\n        <button type=\"button\" className=\"destroy\" />\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n  render() {\n    const { todos, handleChange } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <li\n            className={todo.completed === true ? 'completed' : ''}\n            key={todo.id}\n          >\n            <TodoItem todo={todo} handleChangeItem={handleChange} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n    id: (new Date()).valueOf(),\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleKeyUp = (event) => {\n    const { addNewTodo } = this.props;\n    const { id, title } = this.state;\n\n    if (title !== '' && event.keyCode === 13) {\n      addNewTodo({\n        id,\n        title,\n        completed: false,\n      });\n      this.setState({\n        title: '',\n        id: id + 1,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={this.state.title}\n        onChange={this.handleChange}\n        onKeyUp={this.handleKeyUp}\n      />\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\n\nconst filters = [\n  { path: '#/', name: 'All', value: 0 },\n  { path: '#/active', name: 'Active', value: 1 },\n  { path: '#/completed', name: 'Completed', value: 2 },\n];\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass TodosFilter extends React.Component {\n  render() {\n    const { changeFilter, filter } = this.props;\n\n    return (\n      <ul className=\"filters\">\n        {filters.map(item => (\n          <li key={item.path}>\n            <a\n              onClick={changeFilter(item.value)}\n              href={item.path}\n              className={filter === item.value ? 'selected' : ''}\n            >\n              {item.name}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default TodosFilter;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport TodoApp from './TodoApp';\nimport TodosFilter from './TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filter: 0, // 0 - all, 1 - Active, 2- Completed\n  };\n\n  handleChangeFilter = newFilterValue => () => {\n    this.setState({\n      filter: newFilterValue,\n    });\n  };\n\n  addTodo = (todo) => {\n    this.setState({\n      todos: [...this.state.todos, todo],\n    });\n  };\n\n  handleOnchange = (id, completed) => {\n    const { todos } = this.state;\n\n    const newTodos = todos.map(todo => ((todo.id === id)\n      ? { ...todo, completed }\n      : todo));\n\n    this.setState({\n      todos: newTodos,\n    });\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n    const notCompletedCount = todos.filter(todo => !todo.completed).length;\n    let filteredList;\n\n    switch (filter) {\n      case 0:\n        filteredList = todos;\n        break;\n      case 1:\n        filteredList = todos.filter(todo => !todo.completed);\n        break;\n      case 2:\n        filteredList = todos.filter(todo => todo.completed);\n        break;\n      default:\n        // do nothing\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <TodoApp addNewTodo={this.addTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList todos={filteredList} handleChange={this.handleOnchange} />\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${notCompletedCount} items left`}\n          </span>\n\n          <TodosFilter changeFilter={this.handleChangeFilter} filter={filter} />\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          />\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}